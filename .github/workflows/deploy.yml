name: Deploy to Railway (main)

on:
  push:
    branches: [main]
  workflow_dispatch: {}

permissions:
  contents: read
  deployments: write

concurrency:
  group: prod-deploy
  cancel-in-progress: false

jobs:
  build_test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build (if present)
        run: npm run build --if-present

      - name: Test (if present)
        run: npm test --if-present

  deploy_prod:
    name: Deploy → Migrate → Smoke
    runs-on: ubuntu-latest
    needs: build_test
    environment:
      name: production

    container: ghcr.io/railwayapp/cli:latest

    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      HEALTH_CHECK_URL: ${{ secrets.HEALTH_CHECK_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Debug secrets presence
        run: |
          echo "RAILWAY_TOKEN set? ${{ secrets.RAILWAY_TOKEN != '' }}"
          echo "SERVICE_ID set? ${{ env.RAILWAY_SERVICE_ID != '' }}"
          echo "DATABASE_URL set? ${{ env.DATABASE_URL != '' }}"
          echo "HEALTH_CHECK_URL set? ${{ env.HEALTH_CHECK_URL != '' }}"

      #- name: Run Prisma migrations
      #  run: railway run --service "$RAILWAY_SERVICE_ID" -- npx prisma migrate deploy

      - name: Deploy to Railway
        run: railway up --service "$RAILWAY_SERVICE_ID"
      
      - name: Install curl
        run: apk add --no-cache curl || apt-get update && apt-get install -y curl

      - name: Smoke check
        if: ${{ env.HEALTH_CHECK_URL != '' }}
        run: |
          echo "Hitting $HEALTH_CHECK_URL"
          for i in {1..18}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH_CHECK_URL" || echo "000")
            echo "Attempt $i/18 → $code"
            if [ "$code" = "200" ] || [ "$code" = "404" ]; then
              echo "✅ Service reachable (HTTP $code)"
              exit 0
            fi
            sleep 10
          done
          echo "❌ Health check failed"
          exit 1
